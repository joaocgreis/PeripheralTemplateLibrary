CMSIS_PATH = /home/pfalcon/projects-3rdparty/CMSIS/EFM/
# CMSIS includes consist of two sets: "core", supplied by ARM,
# and "device", supplied by silicon vendor.
CMSIS_CORE_INCLUDE = -I$(LIBPERIPHA_PATH)/arm/cortex-m/arm-cmsis/CMSIS/Include
CMSIS_DEVICE_INCLUDE = -I$(CMSIS_PATH)/Device/EnergyMicro/EFM32GG/Include

JLINK_TOOL = /home/pfalcon/projects-3rdparty/efm32/JLink_Linux_V462a/StartJLinkExe.sh

STARTUP = $(CORTEX_STARTUP_PATH)/startup.c
# No need to specify full path to linker script, will be searched in -L
LINKSCRIPT = efm32/efm32-biggest.ld

DEVICE_INCLUDE = -I$(LIBPERIPHA_PATH) $(CMSIS_CORE_INCLUDE) $(CMSIS_DEVICE_INCLUDE) -DCORTEX_M3

CROSS_COMPILE = arm-none-eabi-
#GCC_VER = -4.4
TARGET_INCLUDE = $(DEVICE_INCLUDE) -I$(CORTEX_STARTUP_PATH)
TARGET_FLAGS = -mthumb -mcpu=cortex-m3 -DNO_SYSTEMINIT -D__EFM32__ -DEFM32
TARGET_CFLAGS = $(TARGET_FLAGS)
TARGET_LDFLAGS = $(TARGET_CFLAGS) $(TARGET_INCLUDE) --static -nostdlib -nostartfiles -T$(LINKSCRIPT) \
    -Wl,--build-id=none $(CMSIS_SYSTEM) $(STARTUP)
LDLIBS = -L$(CORTEX_STARTUP_PATH) -lgcc


.PRECIOUS: $(TARGETDIR)/%.bin

$(TARGETDIR)/%.bin: $(TARGETDIR)/%
	$(OBJCOPY) -O binary $^ $@

deploy-%: $(TARGETDIR)/%.bin
	echo "exec device = EFM32GG990F1024" >$(TARGETDIR)/jlink.script
	echo "loadbin $^, 0" >>$(TARGETDIR)/jlink.script
	echo "r" >>$(TARGETDIR)/jlink.script
	echo "go" >>$(TARGETDIR)/jlink.script
	echo "q" >>$(TARGETDIR)/jlink.script
	# Exits with rc=1 even on success
	$(JLINK_TOOL) $(TARGETDIR)/jlink.script || true
